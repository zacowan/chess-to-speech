"""Helper functions for api_routes to use.

"""

from flask import (
    jsonify
)
from .state_manager import get_fulfillment_params
from .intent_processing import error_fulfillment
import chess
import os


TTS_ERROR_AUDIO_FILENAME = "./static_audio/tts-error.wav"


def get_engine():
    dirname = os.path.dirname(__file__)
    engine_filename = dirname + "/UCI_engine/stockfish"
    engine = chess.engine.SimpleEngine.popen_uci(
        engine_filename)  # load stockfish as chess engine
    return engine


def get_best_move(board_str):
    engine = get_engine()
    board = chess.Board(board_str)
    bestMove = engine.play(board, chess.engine.Limit(time=0.1)).move
    engine.close()
    return bestMove


def get_static_error_audio():
    """Returns the data of a static audio file for TTS errors.

    Returns:
        bytes: the raw bytes of the audio file.

    """
    # Read the audio file
    data = None
    with open(TTS_ERROR_AUDIO_FILENAME, "rb") as f:
        data = f.read()

    return data


def get_response_error_return(session_id, board_str):
    """Returns a generic error response.

    Args:
        board_str: FEN representation of board from client.

    Returns:
        A dictionary that should be returned for the get-response route using jsonify().

        {
            'response_text': str,
            'board_str': str
            'fulfillment_info': dict
        }

        response_text (str): the response generated by Andy, as text.
        fulfillment_info (dict): the intent information detected from the user
            and the game state.

            {
                'intent_name': str,
                'success': boolean
            }

            intent_name (str): the name of the detected intent (always ERROR).
            success (boolean): always False for an error.
        board_str (str): the state of the board, as a FEN string.

    """
    # Get error fulfillment information
    response_text, fulfillment_info = error_fulfillment.get_error_fulfillment()

    return {
        "response_text": response_text,
        "fulfillment_info": fulfillment_info,
        'fulfillment_params': get_fulfillment_params(session_id),
        "board_str": board_str
    }
